plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'org.jlleitschuh.gradle.ktlint'
}

android {
    compileSdkVersion ProjectConfig.compileSdkVersion
    buildToolsVersion ProjectConfig.buildToolsVersion

    defaultConfig {
        applicationId "me.miguelos.sample"
        minSdkVersion ProjectConfig.minSdkVersion
        targetSdkVersion ProjectConfig.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "me.miguelos.sample.CustomTestRunner"

        // Marvel API
        buildConfigField("String", "API_BASE_URL", "\"https://gateway.marvel.com:443/v1/public/\"")
        buildConfigField("boolean", "API_DEBUG_MODE", "true")
        buildConfigField("String", "API_PUBLIC_KEY", "${project.properties["marvelApiPublicKey"] ?: ""}")
        buildConfigField("String", "API_PRIVATE_KEY", "${project.properties["marvelApiPrivateKey"] ?: ""}")
    }

    buildTypes {
        debug {
            buildConfigField("boolean", "API_DEBUG_MODE", "true")
            minifyEnabled false
        }
    }

    flavorDimensions "default"
    productFlavors {
        stage {}
        dev {}
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        incremental false
        javaMaxHeapSize "2048M"
        preDexLibraries = false
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

    sourceSets.all {
        java.srcDir("src/$name/kotlin")
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "com.google.android.material:material:$materialDesignVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation "com.android.support:support-annotations:$supportAnnotationsVersion"

    // Testing
    testImplementation "junit:junit:$jUnitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidTestExtVersion"

    // Robolectric tests.
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"
    testImplementation "androidx.test:core:$androidTestVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"

    // Espresso UI Testing
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation("androidx.test.espresso:espresso-contrib:$espressoVersion") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    api "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    debugImplementation("androidx.fragment:fragment-testing:$fragmentVersion") {
        exclude group: 'androidx.test', module: 'monitor'
    }

    // Dependency Injection
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$andXhiltVersion"
    kapt "androidx.hilt:hilt-compiler:$andXhiltVersion"

    // Architecture Components
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.activity:activity-ktx:$activityVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navVersion"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$navVersion"
    androidTestImplementation "androidx.navigation:navigation-testing:$navVersion"
    implementation "androidx.navigation:navigation-compose:$navComposeVersion"

    // RxJava
    implementation "io.reactivex.rxjava3:rxkotlin:$rxKotlinVersion"
    implementation "io.reactivex.rxjava3:rxandroid:$rxKotlinVersion"
    implementation "io.reactivex.rxjava3:rxjava:$rxJavaVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-jackson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpLogginVersion"

    // Dev utils
    implementation "com.jakewharton.timber:timber:$timberVersion"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
}
